<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="ec.springframework.tutoring.mapper.TutorMapper">

    <insert id="signUp">
        INSERT INTO tutor(email, passwd, name, gender_type, age, phone_num, intro, school_idx)
        VALUES (#{signUpReq.email}, #{signUpReq.passwd}, #{signUpReq.name}, #{signUpReq.genderType}, #{signUpReq.age}
            , #{signUpReq.phoneNum}, #{signUpReq.intro}, #{signUpReq.schoolIdx});
    </insert>

    <select id="checkDuplicateEmail" resultType="java.lang.Integer">
        SELECT EXISTS(SELECT 1 FROM tutor WHERE email LIKE #{email});
    </select>

    <select id="getTuteeList" resultType="ec.springframework.tutoring.model.Tutee">
        SELECT t.*, s.name AS school FROM tutee t INNER JOIN school s ON t.school_idx = s.idx;
    </select>

    <select id="getSchoolList" resultType="ec.springframework.tutoring.model.School">
        SELECT * FROM school WHERE type = 1;
    </select>

    <select id="signIn" resultType="ec.springframework.tutoring.model.Tutee">
        SELECT t.*, s.name AS school FROM tutor t INNER JOIN school s ON t.school_idx = s.idx
        WHERE email LIKE #{signInReq.email} AND passwd LIKE #{signInReq.passwd};
    </select>

    <select id="getInfo" resultType="ec.springframework.tutoring.model.Tutor">
        SELECT t.*, s.name AS school FROM tutor t INNER JOIN school s ON t.school_idx = s.idx
        WHERE idx = #{tutorIdx};
    </select>

    <select id="getMyTuteeList" resultType="ec.springframework.tutoring.model.Tutee">
        SELECT t.*, s.name FROM matching m
            INNER JOIN tutor tt ON m.tutor_idx = tt.idx
            INNER JOIN tutee t ON m.tutee_idx = t.idx
            INNER JOIN school s ON t.school_idx = s.idx WHERE m.tutor_idx = #{tutorIdx};
    </select>

    <select id="getTuteeInfo" resultType="ec.springframework.tutoring.model.Tutee">
        SELECT t.*, s.name AS school FROM tutee t INNER JOIN school s ON t.school_idx = s.idx
        WHERE idx = #{tuteeIdx};
    </select>

    <select id="getRandomMatchedTutee" resultType="ec.springframework.tutoring.model.Tutor">
        SELECT t.*, s.name AS school
        FROM tutee t INNER JOIN school s ON t.school_idx = s.idx
        ORDER BY RAND()
        LIMIT 0,1;
    </select>

    <select id="isApplying">
        SELECT EXISTS(SELECT 1 FROM apply WHERE status = 0 AND tutee_idx = #{matchingApply.tuteeIdx} AND tutor_idx = #{matchingApply.tutorIdx});
    </select>

    <insert id="apply">
        INSERT INTO apply(tutee_idx, tutor_idx, matching_time, type, status)
        VALUES(#{matchingApply.tuteeIdx}, #{matchingApply.tutorIdx}, NOW(), 2, 0);
    </insert>

    <update id="permit">
        UPDATE apply SET status = 1 WHERE idx = #{applyIdx} AND type = 1;
    </update>

    <insert id="match">
        INSERT INTO matching(tutor_idx, tutee_idx, matching_time)
            SELECT tutor_idx, tutee_idx, now() FROM apply WHERE idx = #{applyIdx} AND status = 0 AND type = 1;
    </insert>

    <update id="refuse">
        UPDATE apply SET status = -1 WHERE idx = #{applyIdx} AND type = 1;
    </update>
</mapper>